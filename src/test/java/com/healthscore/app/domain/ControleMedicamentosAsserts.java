package com.healthscore.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ControleMedicamentosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertControleMedicamentosAllPropertiesEquals(ControleMedicamentos expected, ControleMedicamentos actual) {
        assertControleMedicamentosAutoGeneratedPropertiesEquals(expected, actual);
        assertControleMedicamentosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertControleMedicamentosAllUpdatablePropertiesEquals(ControleMedicamentos expected, ControleMedicamentos actual) {
        assertControleMedicamentosUpdatableFieldsEquals(expected, actual);
        assertControleMedicamentosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertControleMedicamentosAutoGeneratedPropertiesEquals(ControleMedicamentos expected, ControleMedicamentos actual) {
        assertThat(expected)
            .as("Verify ControleMedicamentos auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertControleMedicamentosUpdatableFieldsEquals(ControleMedicamentos expected, ControleMedicamentos actual) {
        assertThat(expected)
            .as("Verify ControleMedicamentos relevant properties")
            .satisfies(e -> assertThat(e.getNomeMedicamento()).as("check nomeMedicamento").isEqualTo(actual.getNomeMedicamento()))
            .satisfies(e -> assertThat(e.getDosagem()).as("check dosagem").isEqualTo(actual.getDosagem()))
            .satisfies(e -> assertThat(e.getHorarioIngestao()).as("check horarioIngestao").isEqualTo(actual.getHorarioIngestao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertControleMedicamentosUpdatableRelationshipsEquals(ControleMedicamentos expected, ControleMedicamentos actual) {}
}
