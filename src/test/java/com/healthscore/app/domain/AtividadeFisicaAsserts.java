package com.healthscore.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AtividadeFisicaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAtividadeFisicaAllPropertiesEquals(AtividadeFisica expected, AtividadeFisica actual) {
        assertAtividadeFisicaAutoGeneratedPropertiesEquals(expected, actual);
        assertAtividadeFisicaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAtividadeFisicaAllUpdatablePropertiesEquals(AtividadeFisica expected, AtividadeFisica actual) {
        assertAtividadeFisicaUpdatableFieldsEquals(expected, actual);
        assertAtividadeFisicaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAtividadeFisicaAutoGeneratedPropertiesEquals(AtividadeFisica expected, AtividadeFisica actual) {
        assertThat(expected)
            .as("Verify AtividadeFisica auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAtividadeFisicaUpdatableFieldsEquals(AtividadeFisica expected, AtividadeFisica actual) {
        assertThat(expected)
            .as("Verify AtividadeFisica relevant properties")
            .satisfies(e -> assertThat(e.getTipoAtividade()).as("check tipoAtividade").isEqualTo(actual.getTipoAtividade()))
            .satisfies(e -> assertThat(e.getDataHorario()).as("check dataHorario").isEqualTo(actual.getDataHorario()))
            .satisfies(e -> assertThat(e.getDuracao()).as("check duracao").isEqualTo(actual.getDuracao()))
            .satisfies(e -> assertThat(e.getPassosCalorias()).as("check passosCalorias").isEqualTo(actual.getPassosCalorias()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAtividadeFisicaUpdatableRelationshipsEquals(AtividadeFisica expected, AtividadeFisica actual) {}
}
