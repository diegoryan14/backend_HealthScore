package com.healthscore.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AnuncioAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnuncioAllPropertiesEquals(Anuncio expected, Anuncio actual) {
        assertAnuncioAutoGeneratedPropertiesEquals(expected, actual);
        assertAnuncioAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnuncioAllUpdatablePropertiesEquals(Anuncio expected, Anuncio actual) {
        assertAnuncioUpdatableFieldsEquals(expected, actual);
        assertAnuncioUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnuncioAutoGeneratedPropertiesEquals(Anuncio expected, Anuncio actual) {
        assertThat(expected)
            .as("Verify Anuncio auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnuncioUpdatableFieldsEquals(Anuncio expected, Anuncio actual) {
        assertThat(expected)
            .as("Verify Anuncio relevant properties")
            .satisfies(e -> assertThat(e.getTitulo()).as("check titulo").isEqualTo(actual.getTitulo()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getDataPublicacao()).as("check dataPublicacao").isEqualTo(actual.getDataPublicacao()))
            .satisfies(e -> assertThat(e.getDataInicio()).as("check dataInicio").isEqualTo(actual.getDataInicio()))
            .satisfies(e -> assertThat(e.getDataFim()).as("check dataFim").isEqualTo(actual.getDataFim()))
            .satisfies(e -> assertThat(e.getPreco()).as("check preco").isEqualTo(actual.getPreco()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnuncioUpdatableRelationshipsEquals(Anuncio expected, Anuncio actual) {}
}
